{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","React","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","console","log","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"oOAIMA,E,qLACY,IAAD,OACT,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BACCG,QAAS,kBAAK,EAAKP,MAAMQ,WAAWL,IACpCC,UAAU,qBAFX,WAMJ,yBAAKA,UAAU,WAAWD,EAAKG,a,+BAQ3C,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GApB/BC,IAAMC,WAgCdC,eARS,SAACC,GACrB,MAAO,CAEHZ,MAAOY,EAAMZ,SAKmB,CAACO,WCnCf,SAAAL,GACtB,MAAO,CACHW,KAAM,gBACNC,QAASZ,KDgCFS,CAAoDd,GERpDc,eANS,SAACC,GAErB,MAAO,CAAEV,KAAMU,EAAMG,gBAIVJ,EAzBI,SAAC,GAAY,IAAXT,EAAU,EAAVA,KACjB,OAAIA,EAMA,6BACI,2CACA,oCACWA,EAAKG,MACZ,6BAFJ,YAGcH,EAAKc,WAVhB,mDCeAC,EAfH,WACR,OACI,yBAAKd,UAAU,qBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACX,kBAAC,EAAD,UCSLe,cAAgB,CAC3BlB,MArBgB,WAChB,MAAO,CACH,CAACK,MAAO,YAAaW,SAAU,QAC/B,CAACX,MAAO,WAAYW,SAAU,QAC9B,CAACX,MAAO,WAAYW,SAAU,QAC9B,CAACX,MAAO,qBAAsBW,SAAU,UAiB5CD,aAbwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCACzD,MAAoB,kBAAhBA,EAAON,MACPO,QAAQC,IAAIF,EAAON,MACZM,EAAOL,SAIXC,KCVXO,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEJC,SAASC,cAAc,Y","file":"static/js/main.958b2230.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends React.Component {\r\n    renderList() {\r\n        return this.props.songs.map((song) => {\r\n            return(\r\n                <div className='item' key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button\r\n                         onClick={() =>this.props.selectSong(song)}\r\n                         className=\"ui button primary\">\r\n                            Select\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content\">{song.title}</div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n    \r\n    render() {\r\n        \r\n        return <div className=\"ui divided list\">{this.renderList()}</div>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n        songs: state.songs\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {selectSong: selectSong}) (SongList);","\r\nexport const selectSong = song => {\r\n    return {\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    };\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst SongDetail = ({song}) => {\r\n    if(!song) {\r\n        return <div>Select the song</div>;\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h3>Detail for:</h3>\r\n            <p>\r\n                Title:{song.title}\r\n                <br />\r\n                Duration:{song.duration}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   // console.log(state);\r\n    return { song: state.selectedSong}\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps) (SongDetail);","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container grid\">\r\n            <div className=\"ui row\">\r\n                <div className=\"column eight wide\">\r\n                  <SongList />\r\n                </div>\r\n                <div className='column eight wide'>\r\n                    <SongDetail />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst songReducer = () => {\r\n    return [\r\n        {title: 'No Scrubs', duration: '4:05'},\r\n        {title: 'Macarena', duration: '2:30'},\r\n        {title: 'All Star', duration: '3:15'},\r\n        {title: 'I Want it That Way', duration: '1:05'}\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    if (action.type === 'SONG_SELECTED') {\r\n        console.log(action.type);\r\n        return action.payload;\r\n    }\r\n\r\n\r\n    return selectedSong;\r\n};\r\n\r\n\r\nexport default combineReducers({\r\n    songs: songReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}